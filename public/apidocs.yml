openapi: 3.0.0
info:
  title: Volantis Web API
  description: Documentation of Volantis Web API
  version: 1.0.0
servers:
  - url: <server_url>
paths:
  /genre:
    post:
      summary: Create genre for contents
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGenreBody'
            example:
              name: Comedy
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGenreSuccessResponseBody'
              example:
                message: Genero Comedy fue registrado exitosamente!
                genre:
                  id: 1
                  name: Comedy
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGenreErrorResponseBody'
              example:
                NoNameError:
                  message: 'Error: falta el campo nombre'
                NameRepeatedError:
                  message: 'Error: el genero Comedy ya fue registrado'

  /clients/{email}/contents/{content_id}/seen:
    patch:
      summary: Client sees a content
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchContentSeenResponseBody'
              example:
                message: Visto registrado exitosamente
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchContentSeenResponseBody'
              example:
                message: 'Error: no se puede registrar como visto contenido no estrenado'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchContentSeenResponseBody'
              example:
                ContentNotFound:
                  message: 'Error: el contenido con id -1 no se encuentra registrado'
                ClientNotFound:
                  message: 'Error: el usuario con email test@test.com no se encuentra registrado'
  /content:
    post:
      summary: Create content
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateContentBody'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateContentSuccessResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatchContentSeenResponseBody'
              example:
                GenreNotFound:
                  message: 'Debes agregar el g√©nero antes de crear este contenido'
                MissingNameError:
                  message: 'Error: falta el nombre de uno de tus contenidos'
                MissingReleaseDateError:
                  message: 'Error: falta la fecha de estreno en uno de tus contenidos'
                MissingSeasonNumberError:
                  message: 'Error: falta el numero de temporada en uno de tus contenidos'
                MissingEpisodeNumberError:
                  message: 'Error: falta el numero de episodio en uno de tus contenidos'
                MissingGenreError:
                  message: 'Error: falta el genero en uno de tus contenidos'
                ContentAlreadyCreated:
                  message: 'Error: el contenido ya fue registrado previamente'

components:
  schemas:
    CreateGenreBody:
      properties:
        name:
          type: string

    Genre:
      properties:
        id:
          type: integer
        name:
          type: string

    CreateGenreSuccessResponseBody:
      properties:
        message:
          type: string
        genre:
          $ref: '#/components/schemas/Genre'

    CreateGenreErrorResponseBody:
      properties:
        message:
          type: string

    PatchContentSeenResponseBody:
      properties:
        message:
          type: string

    Episode:
      properties:
        type:
          type: string
          enum: [tv_show]
        name:
          type: string
        audience:
          type: enum
        duration_minutes:
          type: integer
        genre:
          type: string
        country:
          type: string
        director:
          type: string
        release_date:
          type: string
        first_actor:
          type: string
        second_actor:
          type: string
        season_number:
          type: integer
        episode_number:
          type: integer

    Movie:
      properties:
        type:
          type: string
          enum: [movie]
        name:
          type: string
        audience:
          type: enum
        duration_minutes:
          type: integer
        genre:
          type: string
        country:
          type: string
        director:
          type: string
        release_date:
          type: string
        first_actor:
          type: string
        second_actor:
          type: string

    CreateContentBody:
      properties:
        content:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Movie'
              - $ref: '#/components/schemas/Episode'

    CreateContentSuccessResponseBody:
      properties:
        message:
          type: string
        content:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Movie'
              - $ref: '#/components/schemas/Episode'
